__ci_log: p_msg?=
__ci_log:
	@echo "[CI] $(p_msg)"
.PHONY: __ci_log

__ci_step_start:p_stepName?=
__ci_step_start:
ifeq ($(p_stepName),)
	$(MAKE_CMD) _log_err p_msg="Internal error, the __ci_step_start should given a p_stepName variable."
endif
	$(MAKE_CMD) __ci_log p_msg=""
	$(MAKE_CMD) __ci_log p_msg=""
	$(MAKE_CMD) __ci_log p_msg="Start Step : ($(p_stepName)) ..."
	$(MAKE_CMD) __ci_log p_msg="--------------------------------"
.PHONY: __ci_step_start

__ci_step_end:p_stepName?=
__ci_step_end:
ifeq ($(p_stepName),)
	$(MAKE_CMD) _log_err p_msg="Internal error, the __ci_step_end should given a p_stepName variable."
endif
	$(MAKE_CMD) __ci_log p_msg="End of Step : ($(p_stepName))."
	$(MAKE_CMD) __ci_log p_msg=""
	$(MAKE_CMD) __ci_log p_msg=""
.PHONY: __ci_step_end

_ci_git_info:l_stageName:="Git Repository Information"
_ci_git_info:
	$(MAKE_CMD) __ci_step_start p_stepName=$(l_stageName)
	$(GIT_CMD) log -n1
	$(GIT_CMD) submodule status --recursive
	$(MAKE_CMD) __ci_step_end p_stepName=$(l_stageName)
.PHONY: _ci_git_info

_ci_build:l_stageName:="Building"
_ci_build:
	$(MAKE_CMD) __ci_step_start p_stepName=$(l_stageName)
	$(MAKE_CMD) ci-build
	$(MAKE_CMD) __ci_step_end p_stepName=$(l_stageName)
.PHONY: _ci_build

_ci_test:l_stageName:="Testing"
_ci_test:
	$(MAKE_CMD) __ci_step_start p_stepName=$(l_stageName)
	$(MAKE_CMD) ci-test
	$(MAKE_CMD) __ci_step_end p_stepName=$(l_stageName)
.PHONY: _ci_test

ci:
	$(MAKE_CMD) _ci_git_info
	$(MAKE_CMD) _ci_build
	$(MAKE_CMD) _ci_test
.PHONY: ci